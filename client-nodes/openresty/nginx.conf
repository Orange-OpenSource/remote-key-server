# Generated by nginxconfig.io
# https://nginxconfig.io/?domain=fake.com&cert_type=custom&resolver_cloudflare=false&resolver_google=false&resolver_opendns=false&php=false&file_structure=unified

#user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;
env RKS_IP;
env RKS_PORT;
env RKS_GROUP_TOKEN;
env RKS_NODE_ID;

events {
  multi_accept on;
  worker_connections 65535;
}

http {
  charset utf-8;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;
  log_not_found off;
  types_hash_max_size 2048;
  client_max_body_size 16M;

# MIME
  include mime.types;
  default_type application/octet-stream;

# logging
# access_log /usr/local/openresty/nginx/logs/access.log;
# error_log /usr/local/openresty/nginx/logs/error.log info;
  access_log /dev/stdout;
  error_log /dev/stdout debug;

# SSL
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

# intermediate configuration
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
  ssl_prefer_server_ciphers on;

# OCSP Stapling
  ssl_stapling on;
  ssl_stapling_verify on;

# load configs
  include /etc/nginx/conf.d/*.conf;

  lua_package_path '/lua_lib/?.lua;;';
  lua_ssl_verify_depth 2;
  #lua_ssl_trusted_certificate /rks_CA.pem;
  resolver 127.0.1.1;

  lua_shared_dict secrets 10m;
  lua_shared_dict my_locks 1m;

  # fake.com
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name fake.com;
    root /var/www/fake.com/public;

    # SSL
    ssl_certificate /etc/nginx/ssl/fake.com.crt;
    ssl_certificate_key /etc/nginx/ssl/fake.com.key;

    # security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    ssl_certificate_by_lua_file /rks_handler.lua;

    # . files
    location ~ /\. {
      deny all;
    }
  }

  # subdomains redirect
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name *.fake.com;

    # SSL
    ssl_certificate /etc/nginx/ssl/fake.com.crt;
    ssl_certificate_key /etc/nginx/ssl/fake.com.key;

    return 301 https://fake.com$request_uri;
  }

  # HTTP redirect
  server {
    listen 80;
    listen [::]:80;

    server_name .fake.com;

    return 301 https://fake.com$request_uri;
  }
}
